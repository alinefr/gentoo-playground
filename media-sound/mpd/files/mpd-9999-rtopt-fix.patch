--- src/rt_opt.cxx.orig	2014-10-13 15:11:53.501015457 +0100
+++ src/rt_opt.cxx	2014-10-13 15:13:21.133146784 +0100
@@ -295,7 +295,7 @@
 
 	if ( enable_memlock ) {
 	  FormatDebug(rt_opt_domain,
-		      "realtime_option(set_parameter): memlock enable  stack_reserve : %d   heap_reserve : %d\n",
+		      "realtime_option(set_parameter): memlock enable  stack_reserve : %zu   heap_reserve : %zu\n",
 		      stack_reserve,heap_reserve);
 	}
 
@@ -412,13 +412,13 @@
 
 	if ( stack_reserve != (size_t)0 ) {
 		FormatDebug(rt_opt_domain,
-			 "realtime_option(rtopt_memlock): stack_reserve %d",stack_reserve);
+			 "realtime_option(rtopt_memlock): stack_reserve %zu",stack_reserve);
 		bzero(alloca(stack_reserve), stack_reserve);
 	}
 
 	if ( heap_reserve != (size_t)0 ) {
 		FormatDebug(rt_opt_domain,
-			 "realtime_option(rtopt_memlock): heap_reserve %d",heap_reserve);
+			 "realtime_option(rtopt_memlock): heap_reserve %zu",heap_reserve);
 		ptr = malloc(heap_reserve);
 		if ( ptr != NULL ) {
 			bzero(ptr, heap_reserve);
--- src/config/Block.cxx~	2015-05-28 11:50:55.000000000 +0100
+++ src/config/Block.cxx	2015-05-28 11:59:04.473185829 +0100
@@ -50,6 +50,17 @@
 	return (unsigned)value2;
 }
 
+unsigned long
+BlockParam::GetUnsignedLongValue() const
+{
+	char *endptr;
+	unsigned long value2 = strtoul(value.c_str(), &endptr, 0);
+	if (*endptr != 0)
+		FormatFatalError("Not a valid number in line %i", line);
+
+	return (unsigned)value2;
+}
+
 bool
 BlockParam::GetBoolValue() const
 {
@@ -144,6 +155,16 @@
 	return bp->GetUnsignedValue();
 }
 
+unsigned long
+ConfigBlock::GetBlockValue(const char *name, unsigned long default_value) const
+{
+	const BlockParam *bp = GetBlockParam(name);
+	if (bp == nullptr)
+		return default_value;
+
+	return bp->GetUnsignedLongValue();
+}
+
 gcc_pure
 bool
 ConfigBlock::GetBlockValue(const char *name, bool default_value) const
--- src/config/Block.hxx~	2015-05-28 11:50:55.000000000 +0100
+++ src/config/Block.hxx	2015-05-28 11:59:08.483285272 +0100
@@ -52,6 +52,9 @@
 	unsigned GetUnsignedValue() const;
 
 	gcc_pure
+	unsigned long GetUnsignedLongValue() const;
+
+	gcc_pure
 	bool GetBoolValue() const;
 };
 
@@ -118,6 +121,9 @@
 	AllocatedPath GetBlockPath(const char *name, Error &error) const;
 
 	gcc_pure
+	size_t GetBlockValue(const char *name, size_t default_value) const;
+
+	gcc_pure
 	int GetBlockValue(const char *name, int default_value) const;
 
 	gcc_pure
