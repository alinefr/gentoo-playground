--- src/i2p_stream.cpp~	2014-09-02 23:35:34.000000000 +0100
+++ src/i2p_stream.cpp	2014-09-17 23:29:53.202428343 +0100
@@ -227,7 +227,7 @@
 	{
 		TORRENT_ASSERT(m_magic == 0x1337);
 		if (!e) return false;
-//		fprintf(stderr, "i2p error \"%s\"\n", e.message().c_str());
+		fprintf(stderr, "i2p error \"%s\"\n", e.message().c_str());
 		(*h)(e);
 		return true;
 	}
@@ -268,7 +268,7 @@
 #endif
 		async_write(m_sock, asio::buffer(cmd, sizeof(cmd) - 1)
 			, boost::bind(&i2p_stream::start_read_line, this, _1, h));
-//		fprintf(stderr, ">>> %s", cmd);
+		fprintf(stderr, ">>> %s", cmd);
 	}
 
 	void i2p_stream::start_read_line(error_code const& e, boost::shared_ptr<handler_type> h)
@@ -353,24 +353,24 @@
 				break;
 		}
 
-//		fprintf(stderr, "<<< %s\n", &m_buffer[0]);
+		fprintf(stderr, "<<< %s\n", &m_buffer[0]);
 		ptr = string_tokenize(next, ' ', &next);
 		if (ptr == 0 || expect1 == 0 || strcmp(expect1, ptr)) { handle_error(invalid_response, h); return; }
 		ptr = string_tokenize(next, ' ', &next);
 		if (ptr == 0 || expect2 == 0 || strcmp(expect2, ptr)) { handle_error(invalid_response, h); return; }
 
 		int result = 0;
-//		char const* message = 0;
-//		float version = 3.0f;
+		char const* message = 0;
+		float version = 3.0f;
 
 		for(;;)
 		{
 			char* name = string_tokenize(next, '=', &next);
 			if (name == 0) break;
-//			fprintf(stderr, "name=\"%s\"\n", name);
+			fprintf(stderr, "name=\"%s\"\n", name);
 			char* ptr = string_tokenize(next, ' ', &next);
 			if (ptr == 0) { handle_error(invalid_response, h); return; }
-//			fprintf(stderr, "value=\"%s\"\n", ptr);
+			fprintf(stderr, "value=\"%s\"\n", ptr);
 
 			if (strcmp("RESULT", name) == 0)
 			{
@@ -395,11 +395,11 @@
 			}
 			else if (strcmp("MESSAGE", name) == 0)
 			{
-//				message = ptr;
+				message = ptr;
 			}
 			else if (strcmp("VERSION", name) == 0)
 			{
-//				version = float(atof(ptr));
+				version = float(atof(ptr));
 			}
 			else if (strcmp("VALUE", name) == 0)
 			{
@@ -468,7 +468,7 @@
 		char cmd[1024];
 		int size = snprintf(cmd, sizeof(cmd), "STREAM CONNECT ID=%s DESTINATION=%s\n"
 			, m_id, m_dest.c_str());
-//		fprintf(stderr, ">>> %s", cmd);
+		fprintf(stderr, ">>> %s", cmd);
 #if defined TORRENT_ASIO_DEBUGGING
 		add_outstanding_async("i2p_stream::start_read_line");
 #endif
@@ -482,7 +482,7 @@
 		m_state = read_accept_response;
 		char cmd[400];
 		int size = snprintf(cmd, sizeof(cmd), "STREAM ACCEPT ID=%s\n", m_id);
-//		fprintf(stderr, ">>> %s", cmd);
+		fprintf(stderr, ">>> %s", cmd);
 #if defined TORRENT_ASIO_DEBUGGING
 		add_outstanding_async("i2p_stream::start_read_line");
 #endif
@@ -497,7 +497,7 @@
 		char cmd[400];
 		int size = snprintf(cmd, sizeof(cmd), "SESSION CREATE STYLE=STREAM ID=%s DESTINATION=TRANSIENT\n"
 			, m_id);
-//		fprintf(stderr, ">>> %s", cmd);
+		fprintf(stderr, ">>> %s", cmd);
 #if defined TORRENT_ASIO_DEBUGGING
 		add_outstanding_async("i2p_stream::start_read_line");
 #endif
@@ -511,7 +511,7 @@
 		m_state = read_name_lookup_response;
 		char cmd[1024];
 		int size = snprintf(cmd, sizeof(cmd), "NAMING LOOKUP NAME=%s\n", m_name_lookup.c_str());
-//		fprintf(stderr, ">>> %s", cmd);
+		fprintf(stderr, ">>> %s", cmd);
 #if defined TORRENT_ASIO_DEBUGGING
 		add_outstanding_async("i2p_stream::start_read_line");
 #endif
