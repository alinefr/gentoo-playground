diff -Nur ewebkit.orig/Source/cmake/OptionsEfl.cmake ewebkit/Source/cmake/OptionsEfl.cmake
--- ewebkit.orig/Source/cmake/OptionsEfl.cmake	2014-10-15 11:37:25.968261488 +0800
+++ ewebkit/Source/cmake/OptionsEfl.cmake	2014-10-15 13:03:10.653077589 +0800
@@ -117,6 +117,30 @@
 WEBKIT_OPTION_END()
 
 option(ENABLE_ECORE_X "Enable Ecore_X specific usage (cursor, bell)" ON)
+
+option(ENABLE_WAYLAND "Enable Wayland build" OFF)
+
+if (ENABLE_WAYLAND)
+    # When enable wayland build
+    # ensure ENABLE_ECORE_X disabled.
+    # ensure ENABLE_X11_TARGET disabled.
+    # ensure ENABLE_NETSCAPE_PLUGIN_API disabled since it depend on Xlib.
+    message(STATUS "Build Webkit/EFL for Wayland.")
+    set(ENABLE_X11_TARGET OFF)
+    set(ENABLE_ECORE_X OFF)
+    set(ENABLE_NETSCAPE_PLUGIN_API OFF)
+    # There is no direct dependency to ecore-wl2,
+    # but without it, wayland build did not work at all.
+    find_package(PkgConfig)
+    pkg_check_modules(ECORE_WAYLAND ecore-wl2)
+    if (NOT ECORE_WAYLAND_FOUND) 
+        message(FATAL_ERROR "To enable wayland build requires Ecore_Wayland support.")
+    endif ()
+else ()
+    message(STATUS "Build Webkit/EFL for X window.")
+    set(ENABLE_X11_TARGET ON)
+endif ()
+
 if (ENABLE_ECORE_X)
     # We need Xext.h to disable Xlib error messages  when running WTR on Xvfb.
     # These errors are dumped on stderr and makes the test driver thinks that
@@ -232,7 +232,6 @@
 endif ()
 
 if (WTF_OS_UNIX)
-    set(ENABLE_X11_TARGET ON)
     SET_AND_EXPOSE_TO_BUILD(XP_UNIX 1)
 endif (WTF_OS_UNIX)
 
@@ -265,6 +264,9 @@
 SET_AND_EXPOSE_TO_BUILD(USE_TEXTURE_MAPPER_GL TRUE)
 
 option(ENABLE_GLES2 "Enable GLES Support")
+if (ENABLE_WAYLAND)
+    set(ENABLE_GLES2 ON)
+endif ()
 if (ENABLE_GLES2)
     find_package(OpenGLES2 REQUIRED)
     SET_AND_EXPOSE_TO_BUILD(USE_OPENGL_ES_2 TRUE)
@@ -274,6 +276,9 @@
 endif ()
 
 option(ENABLE_EGL "Enable EGL Support")
+if (ENABLE_WAYLAND)
+    set(ENABLE_EGL ON)
+endif ()
 if (ENABLE_EGL)
     find_package(EGL REQUIRED)
     SET_AND_EXPOSE_TO_BUILD(USE_EGL TRUE)
diff -Nur ewebkit.orig/Source/WebCore/platform/efl/EflScreenUtilities.cpp ewebkit/Source/WebCore/platform/efl/EflScreenUtilities.cpp
--- ewebkit.orig/Source/WebCore/platform/efl/EflScreenUtilities.cpp	2014-10-15 11:37:25.706261498 +0800
+++ ewebkit/Source/WebCore/platform/efl/EflScreenUtilities.cpp	2014-10-15 11:37:39.388261008 +0800
@@ -124,6 +124,7 @@
 
 Ecore_X_Window getEcoreXWindow(Ecore_Evas* ecoreEvas)
 {
+#ifdef HAVE_ECORE_X
     const char* engine = ecore_evas_engine_name_get(ecoreEvas);
 
     if (!strcmp(engine, "opengl_x11"))
@@ -132,6 +133,7 @@
     if (!strcmp(engine, "software_x11"))
         return ecore_evas_software_x11_window_get(ecoreEvas);
 
+#endif
     return 0;
 }
 
diff -Nur ewebkit.orig/Source/WebCore/platform/efl/PlatformScreenEfl.cpp ewebkit/Source/WebCore/platform/efl/PlatformScreenEfl.cpp
--- ewebkit.orig/Source/WebCore/platform/efl/PlatformScreenEfl.cpp	2014-10-15 11:37:25.706261498 +0800
+++ ewebkit/Source/WebCore/platform/efl/PlatformScreenEfl.cpp	2014-10-15 11:37:56.036260413 +0800
@@ -94,11 +94,11 @@
     ecore_x_screen_size_get(ecore_x_default_screen_get(), &width, &height);
     return FloatRect(0, 0, width, height);
 #else
-    if (!widget || !widget->evas())
+    if (!widget || !widget->platformWidget())
         return FloatRect();
 
     int x, y, w, h;
-    ecore_evas_screen_geometry_get(ecore_evas_ecore_evas_get(widget->evas()), &x, &y, &w, &h);
+    ecore_evas_screen_geometry_get(ecore_evas_ecore_evas_get(widget->platformWidget()), &x, &y, &w, &h);
     return FloatRect(x, y, w, h);
 #endif
 }
diff -Nur ewebkit.orig/Source/WebCore/PlatformEfl.cmake ewebkit/Source/WebCore/PlatformEfl.cmake
--- ewebkit.orig/Source/WebCore/PlatformEfl.cmake	2014-10-15 11:37:25.965261488 +0800
+++ ewebkit/Source/WebCore/PlatformEfl.cmake	2014-10-15 11:37:32.076261270 +0800
@@ -157,12 +157,6 @@
 
     platform/graphics/surfaces/efl/GraphicsSurfaceCommon.cpp
 
-    platform/graphics/surfaces/glx/X11Helper.cpp
-
-    platform/graphics/x11/PlatformDisplayX11.cpp
-    platform/graphics/x11/XErrorTrapper.cpp
-    platform/graphics/x11/XUniqueResource.cpp
-
     platform/image-decoders/cairo/ImageBackingStoreCairo.cpp
     platform/image-encoders/JPEGImageEncoder.cpp
 
@@ -261,10 +255,21 @@
     ${LIBXSLT_LIBRARIES}
     ${HYPHEN_LIBRARIES}
     ${SQLITE_LIBRARIES}
-    ${X11_X11_LIB}
     ${ZLIB_LIBRARIES}
 )
 
+if (ENABLE_X11_TARGET)
+    list(APPEND WebCore_LIBRARIES
+        ${X11_X11_LIB}
+    )
+endif()
+
+if (USE_OPENGL_ES_2)
+    list(APPEND WebCore_LIBRARIES
+        ${OPENGLES2_LIBRARY}
+    )
+endif()
+
 list(APPEND WebCore_SYSTEM_INCLUDE_DIRECTORIES
     ${CAIRO_INCLUDE_DIRS}
     ${ECORE_INCLUDE_DIRS}
@@ -290,6 +295,16 @@
     ${HARFBUZZ_INCLUDE_DIRS}
 )
 
+if (ENABLE_X11_TARGET)
+    list(APPEND WebCore_SOURCES
+        platform/graphics/surfaces/glx/X11Helper.cpp
+        platform/graphics/x11/PlatformDisplayX11.cpp
+        platform/graphics/x11/XErrorTrapper.cpp
+        platform/graphics/x11/XUniqueResource.cpp
+
+    )
+endif ()
+
 if (USE_EGL)
     list(APPEND WebCore_INCLUDE_DIRECTORIES
         "${WEBCORE_DIR}/platform/graphics/surfaces/egl"
@@ -302,7 +317,6 @@
         platform/graphics/surfaces/egl/EGLContext.cpp
         platform/graphics/surfaces/egl/EGLHelper.cpp
         platform/graphics/surfaces/egl/EGLSurface.cpp
-        platform/graphics/surfaces/egl/EGLXSurface.cpp
     )
 else ()
     list(APPEND WebCore_SOURCES
@@ -311,6 +325,12 @@
     )
 endif ()
 
+if (USE_EGL AND ENABLE_X11_TARGET)
+    list(APPEND WebCore_SOURCES
+        platform/graphics/surfaces/egl/EGLXSurface.cpp
+    )
+endif()
+
 if (USE_OPENGL_ES_2)
     list(APPEND WebCore_SOURCES
         platform/graphics/opengl/Extensions3DOpenGLES.cpp
diff -Nur ewebkit.orig/Source/WebKit2/PlatformEfl.cmake ewebkit/Source/WebKit2/PlatformEfl.cmake
--- ewebkit.orig/Source/WebKit2/PlatformEfl.cmake	2014-10-15 11:37:25.286261513 +0800
+++ ewebkit/Source/WebKit2/PlatformEfl.cmake	2014-10-15 11:37:32.077261270 +0800
@@ -294,6 +294,12 @@
     ${SQLITE_LIBRARIES}
 )
 
+if (USE_OPENGL_ES_2)
+    list(APPEND WebKit2_LIBRARIES
+        ${OPENGLES2_LIBRARY}
+    )
+endif()
+
 list(APPEND WebProcess_SOURCES
     WebProcess/EntryPoint/unix/WebProcessMain.cpp
 )
