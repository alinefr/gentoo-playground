diff --git a/M2Crypto/__init__.py b/M2Crypto/__init__.py
index 647e057..62a9fb5 100644
--- a/M2Crypto/__init__.py
+++ b/M2Crypto/__init__.py
@@ -19,7 +19,7 @@ Copyright 2008-2011 Heikki Toivonen. All rights reserved.
 version_info = (0, 22)
 version = '.'.join([str(_v) for _v in version_info])

-import __m2crypto
+import _m2crypto
 import m2
 import ASN1
 import AuthCookie
diff --git a/M2Crypto/m2.py b/M2Crypto/m2.py
index e4bb695..822143f 100644
--- a/M2Crypto/m2.py
+++ b/M2Crypto/m2.py
@@ -25,7 +25,7 @@ Portions created by Open Source Applications Foundation (OSAF) are
 Copyright (C) 2004 OSAF. All Rights Reserved.
 """

-from __m2crypto import *
+from _m2crypto import *
 lib_init()


diff --git a/SWIG/_lib.i b/SWIG/_lib.i
index 0d40698..c74e531 100644
--- a/SWIG/_lib.i
+++ b/SWIG/_lib.i
@@ -66,6 +66,8 @@ int ssl_verify_callback(int ok, X509_STORE_CTX *ctx) {
     int cret;
     int new_style_callback = 0, warning_raised_exception=0;
     PyGILState_STATE gilstate;
+    PyObject *self = 0;
+    (void)self;

     ssl = (SSL *)X509_STORE_CTX_get_app_data(ctx);

@@ -151,6 +153,8 @@ int ssl_verify_callback(int ok, X509_STORE_CTX *ctx) {
 void ssl_info_callback(const SSL *s, int where, int ret) {
     PyObject *argv, *retval, *_SSL;
     PyGILState_STATE gilstate;
+    PyObject *self = 0;
+    (void)self;

     gilstate = PyGILState_Ensure();

@@ -170,6 +174,8 @@ DH *ssl_set_tmp_dh_callback(SSL *ssl, int is_export, int keylength) {
     PyObject *argv, *ret, *_ssl;
     DH *dh;
     PyGILState_STATE gilstate;
+    PyObject *self = 0;
+    (void)self;

     gilstate = PyGILState_Ensure();

@@ -193,6 +199,8 @@ RSA *ssl_set_tmp_rsa_callback(SSL *ssl, int is_export, int keylength) {
     PyObject *argv, *ret, *_ssl;
     RSA *rsa;
     PyGILState_STATE gilstate;
+    PyObject *self = 0;
+    (void)self;

     gilstate = PyGILState_Ensure();

diff --git a/SWIG/_pkcs7.i b/SWIG/_pkcs7.i
index 22d791a..92b1aeb 100644
--- a/SWIG/_pkcs7.i
+++ b/SWIG/_pkcs7.i
@@ -157,6 +157,8 @@ PyObject *smime_read_pkcs7(BIO *bio) {
     BIO *bcont = NULL;
     PKCS7 *p7;
     PyObject *tuple, *_p7, *_BIO;
+    PyObject *self = 0;
+    (void)self;

     if (BIO_method_type(bio) == BIO_TYPE_MEM) {
         /* OpenSSL FAQ explains that this is needed for mem BIO to return EOF,
diff --git a/setup.py b/setup.py
index 0bdcbd0..8da24e3 100644
--- a/setup.py
+++ b/setup.py
@@ -76,7 +76,9 @@ class _M2CryptoBuildExt(build_ext.build_ext):
         self.swig_opts = ['-I%s' % i for i in self.include_dirs + \
                           [opensslIncludeDir, os.path.join(opensslIncludeDir, "openssl")]]
         self.swig_opts.append('-includeall')
-        self.swig_opts.append('-modern')
+        ##self.swig_opts.append('-modern')
+        self.swig_opts.append('-builtin')
+        self.swig_opts.append('-relativeimport')
 
         # Fedora does hat tricks.
         if platform.linux_distribution()[0] in ['Fedora', 'CentOS']:
